{"mappings":"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","sources":["node_modules/@web3-react/frame-connector/src/index.ts","node_modules/eth-provider/browser.js","node_modules/eth-provider/resolve/index.js","node_modules/eth-provider/provider/index.js","node_modules/ethereum-provider/index.js","node_modules/eth-provider/ConnectionManager/index.js","node_modules/eth-provider/presets/index.js","node_modules/eth-provider/connections/injected.js","node_modules/eth-provider/connections/unavailable.js","node_modules/eth-provider/connections/ws.js","node_modules/eth-provider/parse/index.js","node_modules/eth-provider/connections/http.js","node_modules/eth-provider/node_modules/uuid/v4.js","node_modules/eth-provider/node_modules/uuid/lib/rng-browser.js","node_modules/eth-provider/node_modules/uuid/lib/bytesToUuid.js"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport ethProvider from 'eth-provider'\nimport invariant from 'tiny-invariant'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class FrameConnector extends AbstractConnector {\n  private provider: any\n\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleNetworkChanged(networkId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\n  }\n\n  private handleChainChanged(chainId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      this.provider = ethProvider('frame')\n    }\n\n    this.provider\n      .on('networkChanged', this.handleNetworkChanged)\n      .on('chainChanged', this.handleChainChanged)\n      .on('accountsChanged', this.handleAccountsChanged)\n      .on('close', this.handleClose)\n\n    const account = await this.provider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        if (error && (error as any).code === 4001) {\n          throw new UserRejectedRequestError()\n        } else {\n          throw error\n        }\n      })\n\n    return { provider: this.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider\n      .removeListener('networkChanged', this.handleNetworkChanged)\n      .removeListener('chainChanged', this.handleChainChanged)\n      .removeListener('accountsChanged', this.handleAccountsChanged)\n      .removeListener('close', this.handleClose)\n  }\n}\n","const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n","const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n","const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n","const EventEmitter = require('events')\n\nclass EthereumProvider extends EventEmitter {\n  constructor (connection) {\n    super()\n    this.connected = false\n    this.nextId = 0\n    this.promises = {}\n    this.subscriptions = []\n    this.connection = connection\n    this.connection.on('connect', () => this.checkConnection())\n    this.connection.on('close', () => this.emit('close'))\n    this.connection.on('payload', payload => {\n      const { id, method, error, result } = payload\n      if (typeof id !== 'undefined') {\n        if (this.promises[id]) { // Fulfill promise\n          payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result)\n          delete this.promises[id]\n        }\n      } else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n        this.emit(payload.params.subscription, payload.params.result)\n        this.emit(method, payload.params) // Latest EIP-1193\n        this.emit('data', payload) // Backwards Compatibility\n      }\n    })\n    this.on('newListener', (event, listener) => {\n      if (event === 'networkChanged') {\n        if (!this.attemptedNetworkSubscription && this.connected) this.startNetworkSubscription()\n      } else if (event === 'accountsChanged') {\n        if (!this.attemptedAccountsSubscription && this.connected) this.startAccountsSubscription()\n      }\n    })\n  }\n  async checkConnection () {\n    try {\n      this.emit('connect', await this._send('net_version'))\n      this.connected = true\n      if (this.listenerCount('networkChanged') && !this.attemptedNetworkSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('accountsChanged') && !this.attemptedAccountsSubscription) this.startAccountsSubscription()\n    } catch (e) {\n      this.connected = false\n    }\n  }\n  async startNetworkSubscription () {\n    this.attemptedNetworkSubscription = true\n    try {\n      let networkChanged = await this.subscribe('eth_subscribe', 'networkChanged')\n      this.on(networkChanged, netId => this.emit('networkChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to networkChanged', e)\n    }\n  }\n  async startAccountsSubscription () {\n    this.attemptedAccountsSubscription = true\n    try {\n      let accountsChanged = await this.subscribe('eth_subscribe', 'accountsChanged')\n      this.on(accountsChanged, accounts => this.emit('accountsChanged', accounts))\n    } catch (e) {\n      console.warn('Unable to subscribe to accountsChanged', e)\n    }\n  }\n  enable () {\n    return new Promise((resolve, reject) => {\n      this._send('eth_accounts').then(accounts => {\n        if (accounts.length > 0) {\n          this.accounts = accounts\n          this.coinbase = accounts[0]\n          this.emit('enable')\n          resolve(accounts)\n        } else {\n          const err = new Error('User Denied Full Provider')\n          err.code = 4001\n          reject(err)\n        }\n      }).catch(reject)\n    })\n  }\n  _send (method, params = []) {\n    if (!method || typeof method !== 'string') return new Error('Method is not a valid string.')\n    if (!(params instanceof Array)) return new Error('Params is not a valid array.')\n    const payload = { jsonrpc: '2.0', id: this.nextId++, method, params }\n    const promise = new Promise((resolve, reject) => { this.promises[payload.id] = { resolve, reject } })\n    this.connection.send(payload)\n    return promise\n  }\n  send (...args) { // Send can be clobbered, proxy sendPromise for backwards compatibility\n    return this._send(...args)\n  }\n  _sendBatch (requests) {\n    return Promise.all(requests.map(payload => this._send(payload.method, payload.params)))\n  }\n  subscribe (type, method, params = []) {\n    return this._send(type, [method, ...params]).then(id => {\n      this.subscriptions.push(id)\n      return id\n    })\n  }\n  unsubscribe (type, id) {\n    return this._send(type, [id]).then(success => {\n      if (success) {\n        this.subscriptions = this.subscriptions.filter(_id => _id !== id) // Remove subscription\n        this.removeAllListeners(id) // Remove listeners\n        return success\n      }\n    })\n  }\n  sendAsync (payload, cb) { // Backwards Compatibility\n    if (!cb || typeof cb !== 'function') return cb(new Error('Invalid or undefined callback provided to sendAsync'))\n    if (!payload) return cb(new Error('Invalid Payload'))\n    // sendAsync can be called with an array for batch requests used by web3.js 0.x\n    // this is not part of EIP-1193's backwards compatibility but we still want to support it\n    if (payload instanceof Array) {\n      return this.sendAsyncBatch(payload, cb)\n    } else {\n      return this._send(payload.method, payload.params).then(result => {\n        cb(null, { id: payload.id, jsonrpc: payload.jsonrpc, result })\n      }).catch(err => {\n        cb(err)\n      })\n    }\n  }\n  sendAsyncBatch (payload, cb) {\n    return this._sendBatch(payload).then((results) => {\n      let result = results.map((entry, index) => {\n        return { id: payload[index].id, jsonrpc: payload[index].jsonrpc, result: entry }\n      })\n      cb(null, result)\n    }).catch(err => {\n      cb(err)\n    })\n  }\n  isConnected () { // Backwards Compatibility\n    return this.connected\n  }\n  close () {\n    this.connection.close()\n    this.connected = false\n    let error = new Error(`Provider closed, subscription lost, please subscribe again.`)\n    this.subscriptions.forEach(id => this.emit(id, error)) // Send Error objects to any open subscriptions\n    this.subscriptions = [] // Clear subscriptions\n  }\n}\n\nmodule.exports = EthereumProvider\n","const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', (summary) => {\n        this.connected = false\n        this.emit('close')\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected')\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","module.exports = {\n  injected: ['injected'],\n  frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n  direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n  infura: ['wss://mainnet.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://mainnet.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRopsten: ['wss://ropsten.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://ropsten.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRinkeby: ['wss://rinkeby.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://rinkeby.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraKovan: ['wss://kovan.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://kovan.infura.io/v3/786ade30f36244469480aa5c2bf0743b']\n}\n","const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n","const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n","const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) this.emit('error', new Error('No WebSocket transport available'))\n    try { this.socket = new WebSocket(url) } catch (e) { return this.emit('error', e) }\n    this.socket.addEventListener('error', err => this.emit('error', err))\n    this.socket.addEventListener('open', () => {\n      this.emit('connect')\n      this.socket.addEventListener('message', message => {\n        const data = typeof message.data === 'string' ? message.data : ''\n        parse(data, (err, payloads) => {\n          if (err) return //\n          payloads.forEach(load => {\n            if (Array.isArray(load)) {\n              load.forEach(payload => this.emit('payload', payload))\n            } else {\n              this.emit('payload', load)\n            }\n          })\n        })\n      })\n      this.socket.addEventListener('close', () => this.onClose())\n    })\n  }\n\n  onClose () {\n    this.socket = null\n    this.closed = true\n    if (dev) console.log('Closing WebSocket connection')\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket) {\n      this.socket.close()\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n      setTimeout(_ => this.send(payload), 10)\n    } else if (!this.socket || this.socket.readyState > 1) {\n      this.connected = false\n      this.error(payload, 'Not connected')\n    } else {\n      this.socket.send(JSON.stringify(payload))\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n","let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n","const EventEmitter = require('events')\nconst uuid = require('uuid/v4')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n  }\n\n  create () {\n    if (!XHR) return this.emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'eth_syncing', params: [], id: 1 }, (err, response) => {\n      if (err) return this.emit('error', err)\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n        this.connected = true\n        this.emit('connect')\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this.emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this.emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this.emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n"],"names":["UserRejectedRequestError","_this","_Error","call","this","name","constructor","message","$dc6b8601e075bb4a$var$_inheritsLoose","$dc6b8601e075bb4a$var$_wrapNativeSuper","Error","FrameConnector","kwargs","supportedChainIds","length","invariant","_this2","_AbstractConnector","handleNetworkChanged","bind","$dc6b8601e075bb4a$var$_assertThisInitialized","handleChainChanged","handleAccountsChanged","handleClose","_proto","prototype","networkId","emitUpdate","provider","chainId","accounts","account","code","reason","emitDeactivate","activate","_this4","ethProvider","on","Promise","resolve","enable","then","error","e","reject","getProvider","getChainId","send","getAccount","deactivate","removeListener","AbstractConnector","$0a024acb72d0ca5c$var$injected","ethereum","window","web3","currentProvider","$0a024acb72d0ca5c$var$ws","WebSocket","$0a024acb72d0ca5c$var$XHR","XMLHttpRequest","__isProvider","$0a024acb72d0ca5c$var$connections","injected","parcelRequire","ipc","ws","http","module","exports","targets","options","$gVwkO","$l9sxP","$hFbBO","$f66094993c29c2e6$var$getProtocol","location","endsWith","startsWith","presets","concat","map","type","protocol","filter","console","log","$c52b0d31389a91f0$var$monitor","update","status","$2XJVW","emit","check","inSetup","setTimeout","connections","t","indexOf","$cEb2H","$kAwPB","setMaxListeners","connection","super","connected","nextId","promises","subscriptions","checkConnection","payload","id","method","result","params","subscription","event","listener","attemptedNetworkSubscription","startNetworkSubscription","attemptedAccountsSubscription","startAccountsSubscription","_send","listenerCount","networkChanged","subscribe","netId","warn","accountsChanged","coinbase","err","catch","Array","jsonrpc","promise","args","_sendBatch","requests","all","push","unsubscribe","success","_id","removeAllListeners","sendAsync","cb","sendAsyncBatch","results","entry","index","isConnected","close","forEach","$efd0a3111008cf0b$var$dev","interval","connect","connectionError","summary","closing","refresh","target","data","clearTimeout","connectTimer","closed","frame","direct","infura","infuraRopsten","infuraRinkeby","infuraKovan","$3bd64657a228328f$var$InjectedConnection","_injected","options1","$5aa4e7a23ef81ccf$var$UnavailableConnection","message1","$226b810e7e3b839e$var$WebSocket","$226b810e7e3b839e$var$WebSocketConnection","_WebSocket","url1","create","url","socket","addEventListener","$1bz0S","payloads","load","isArray","onClose","readyState","CONNECTING","_","JSON","stringify","WebSocket1","url2","$0dd1fa6dd76e98e2$var$last","$0dd1fa6dd76e98e2$var$timeout","res","values","replace","split","parse","$a716c0621bbad307$var$XHR","$a716c0621bbad307$var$HTTPConnection","_XHR","pollId","$956Lr","init","response","err1","response1","pollSubscriptions","subscriptionTimeout","p","n","filterStatus","statusText","internal","xhr","responded","abort","open","setRequestHeader","timeout","onerror","ontimeout","onreadystatechange","responseText","XHR","buf","offset","i","rnds","random","rng","$h2HPU","ii","$9x7Jp","$c684a087ab840629$var$getRandomValues","crypto","getRandomValues","msCrypto","$c684a087ab840629$var$rnds8","Uint8Array","$c684a087ab840629$var$rnds","r","Math","$6f0d316fdd27b8c9$var$byteToHex","$6f0d316fdd27b8c9$var$i","toString","substr","bth","join"],"version":3,"file":"frame-connector.esm.f70615a1.js.map"}