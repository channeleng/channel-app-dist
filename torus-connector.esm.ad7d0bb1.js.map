{"mappings":"iaAUaA,IAAAA,EAAAA,SAAAA,oBAQXA,EAAAC,SAAcC,EAAAA,EAAAA,QAASC,EAAAA,EAAAA,YAAAA,OAAAA,IAAAA,EAAAA,GAAAA,EAAkBC,EAAAA,EAAAA,mBAAAA,OAAAA,IAAAA,EAAAA,GAAAA,EAAyBC,EAAAA,EAAAA,aAAAA,OAAAA,IAAAA,EAAAA,GAAAA,SAChEC,EAAAC,EAAAC,KAAAC,KAAA,CAAQC,kBAAiB,CAAGR,YAEvBA,QAAUA,EACfI,EAAKH,YAAcA,EACnBG,EAAKF,mBAAqBA,EAC1BE,EAAKD,aAAeA,MAdxBE,KAAAP,yEAAA,IAAAW,EAAAX,EAAAY,iBAAAD,EAiBeE,SAjBf,eAkBS,IAAAC,EAAAL,yBAMiBM,QAAAC,QAAAF,EAAKG,MAAMC,MAAMJ,EAAKT,cAAcc,MAApC,SAA0CC,UAA+BA,EAAS,OAAlFD,MAAA,SAAhBE,UAEGC,SAAUR,EAAKG,MAAMK,SAAUD,QAAAA,oBARpC,IAACP,EAAKG,MAAN,OACkBF,QAAAC,QAAAO,EAAA,SAAiCJ,MAAjC,SAAsCK,GAAC,IAAAC,SAAA,OAAAA,EAAA,MAAID,OAAJ,EAAIA,EAAC,SAALC,EAAkBD,MAAzDL,MAAA,SAAdO,UACNZ,EAAKG,MAAQ,IAAIS,EAAMZ,EAAKV,oBACtBW,QAAAC,QAAAF,EAAKG,MAAMU,KAAKb,EAAKX,cAArBgB,MAAA,kBAFcI,EAAA,wFAnB1B,MA2BGK,UA3BHb,QAAAc,OAAAD,KAAAjB,EA6BemB,YA7Bf,sBA8BIf,QAAAC,QAAOP,KAAKQ,MAAMK,UA9BtB,MA+BGM,UA/BHb,QAAAc,OAAAD,KAAAjB,EAiCeoB,WAjCf,sBAkCIhB,QAAAC,QAAOP,KAAKP,SAlChB,MAmCG0B,UAnCHb,QAAAc,OAAAD,KAAAjB,EAqCeqB,WArCf,sBAsCIjB,QAAAC,QAAOP,KAAKQ,MAAMgB,SAASC,KAApB,gBAAyCf,MAAzC,SAA+CC,UAA+BA,EAAS,OAtClG,MAuCGQ,UAvCHb,QAAAc,OAAAD,KAAAjB,EAyCewB,WAzCf,qCAAAxB,EA2CeyB,MA3Cf,eA4CU,IAAAC,EAAA5B,YAAAM,QAAAC,QAAAqB,EAAKpB,MAAMqB,WAAXnB,MAAA,WACNkB,EAAKE,oBA7CT,MA8CGX,UA9CHb,QAAAc,OAAAD,KAAA5B,EAAaA,YAAuBwC,wDCVpCC,EAAAC,QAAcC,OAAA,KAA8BpB,EAAA,SAAAP,QAA4C,UAAYG,MAAI,IAAOI,EAAa","sources":["node_modules/@web3-react/torus-connector/src/index.ts","node_modules/@parcel/runtime-js/lib/runtime-9623f645974cf613.js"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\n\ninterface TorusConnectorArguments {\n  chainId: number\n  initOptions?: any\n  constructorOptions?: any\n  loginOptions?: any\n}\n\nexport class TorusConnector extends AbstractConnector {\n  private readonly chainId: number\n  private readonly initOptions: any\n  private readonly constructorOptions: any\n  private readonly loginOptions: any\n\n  public torus: any\n\n  constructor({ chainId, initOptions = {}, constructorOptions = {}, loginOptions = {} }: TorusConnectorArguments) {\n    super({ supportedChainIds: [chainId] })\n\n    this.chainId = chainId\n    this.initOptions = initOptions\n    this.constructorOptions = constructorOptions\n    this.loginOptions = loginOptions\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.torus) {\n      const Torus = await import('@toruslabs/torus-embed').then(m => m?.default ?? m)\n      this.torus = new Torus(this.constructorOptions)\n      await this.torus.init(this.initOptions)\n    }\n\n    const account = await this.torus.login(this.loginOptions).then((accounts: string[]): string => accounts[0])\n\n    return { provider: this.torus.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.torus.provider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    return this.chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    return this.torus.ethereum.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public async deactivate() {}\n\n  public async close() {\n    await this.torus.cleanUp()\n    this.emitDeactivate()\n  }\n}\n","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"eMEIJ\"))).then(() => parcelRequire('caXWc'));"],"names":["TorusConnector","_ref","chainId","initOptions","constructorOptions","loginOptions","_this","_AbstractConnector","call","this","supportedChainIds","_proto","prototype","activate","_this3","Promise","resolve","torus","login","then","accounts","account","provider","parcelRequire","m","_m$default","Torus","init","e","reject","getProvider","getChainId","getAccount","ethereum","send","deactivate","close","_this11","cleanUp","emitDeactivate","AbstractConnector","module","exports","import"],"version":3,"file":"torus-connector.esm.ad7d0bb1.js.map"}